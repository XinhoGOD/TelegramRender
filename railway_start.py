#!/usr/bin/env python3
"""
Script de inicio para Railway
Maneja la configuraci√≥n autom√°tica del userbot en Railway
"""

import os
import sys
import asyncio
import time
from telethon import TelegramClient
from config import API_ID, API_HASH, PHONE_NUMBER

# Usar un nombre de sesi√≥n √∫nico para Railway
SESSION_NAME = 'railway_userbot_session'

async def setup_railway():
    """Configura el userbot para Railway"""
    print("üöÇ Configurando UserBot para Railway...")
    
    # Verificar variables de entorno
    if not API_ID or not API_HASH or not PHONE_NUMBER:
        print("‚ùå Error: Faltan variables de entorno")
        print("üí° Configura en Railway:")
        print("   - API_ID")
        print("   - API_HASH") 
        print("   - PHONE_NUMBER")
        return False
    
    print(f"‚úÖ API_ID: {API_ID}")
    print(f"‚úÖ API_HASH: {API_HASH[:10]}...")
    print(f"‚úÖ PHONE_NUMBER: {PHONE_NUMBER}")
    
    # Crear cliente con nombre de sesi√≥n √∫nico
    client = TelegramClient(SESSION_NAME, API_ID, API_HASH)
    
    try:
        print("üì° Conectando a Telegram...")
        
        # Intentar conectar con manejo de errores
        try:
            await client.start(phone=PHONE_NUMBER)
        except Exception as e:
            if "database is locked" in str(e):
                print("‚ö†Ô∏è Error de base de datos bloqueada, intentando limpiar...")
                # Eliminar archivo de sesi√≥n si existe
                session_file = f"{SESSION_NAME}.session"
                if os.path.exists(session_file):
                    try:
                        os.remove(session_file)
                        print("‚úÖ Archivo de sesi√≥n eliminado")
                    except:
                        pass
                
                # Intentar conectar nuevamente
                await client.start(phone=PHONE_NUMBER)
            else:
                raise e
        
        if await client.is_user_authorized():
            print("‚úÖ Sesi√≥n autorizada")
            me = await client.get_me()
            print(f"üë§ Usuario: {me.first_name}")
            print(f"üì± Tel√©fono: {me.phone}")
            
            # Importar y ejecutar el userbot
            from userbot import main
            print("üöÄ Iniciando UserBot...")
            await main()
            
        else:
            print("‚ùå Error: No se pudo autorizar la sesi√≥n")
            return False
            
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        return False
    finally:
        await client.disconnect()
    
    return True

def main():
    """Funci√≥n principal"""
    print("ü§ñ UserBot de Telegram para Railway")
    print("=" * 40)
    
    # Ejecutar configuraci√≥n
    success = asyncio.run(setup_railway())
    
    if not success:
        print("\n‚ùå Error en la configuraci√≥n")
        sys.exit(1)
    
    print("\n‚úÖ UserBot configurado y ejecut√°ndose en Railway")

if __name__ == "__main__":
    main() 